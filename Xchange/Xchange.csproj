<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{86372A4C-C89F-43F8-8AC0-1BE4D8BC8DC9}</ProjectGuid>
    <OutputType>Exe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Xchange</RootNamespace>
    <AssemblyName>Xchange</AssemblyName>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="CommandLine, Version=1.9.71.2, Culture=neutral, PublicKeyToken=de6f01bd326f8c32, processorArchitecture=MSIL">
      <HintPath>..\packages\CommandLineParser.1.9.71\lib\net45\CommandLine.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>..\packages\Newtonsoft.Json.6.0.4\lib\net45\Newtonsoft.Json.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="SimpleInjector, Version=4.0.12.0, Culture=neutral, PublicKeyToken=984cb50dea722e99, processorArchitecture=MSIL">
      <HintPath>..\packages\SimpleInjector.4.0.12\lib\net45\SimpleInjector.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Net.Http.Formatting, Version=5.2.3.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\packages\Microsoft.AspNet.WebApi.Client.5.2.3\lib\net45\System.Net.Http.Formatting.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Common\Nodes\Assignable.cs" />
    <Compile Include="Common\Nodes\Assignment.cs" />
    <Compile Include="Common\Nodes\Call.cs" />
    <Compile Include="Common\Nodes\Condition.cs" />
    <Compile Include="Common\Nodes\Currency.cs" />
    <Compile Include="Common\Nodes\Expression.cs" />
    <Compile Include="Common\Nodes\FunDefinition.cs" />
    <Compile Include="Common\Nodes\IfStatement.cs" />
    <Compile Include="Common\Nodes\LoopJump.cs" />
    <Compile Include="Common\Nodes\Node.cs" />
    <Compile Include="Common\Nodes\NodeTypeEnum.cs" />
    <Compile Include="Common\Nodes\Program.cs" />
    <Compile Include="Common\Nodes\ReturnStatement.cs" />
    <Compile Include="Common\Nodes\StatementBlock.cs" />
    <Compile Include="Common\Nodes\VarDeclaration.cs" />
    <Compile Include="Common\Nodes\Variable.cs" />
    <Compile Include="Common\Nodes\WhileStatement.cs" />
    <Compile Include="Common\SourcePosition.cs" />
    <Compile Include="Execution\Executor.cs" />
    <Compile Include="Handlers\ErrorHandler\ErrorHandler.cs" />
    <Compile Include="Handlers\ErrorHandler\ErrorHandlerStatic.cs" />
    <Compile Include="Handlers\ErrorHandler\TerminalPrinter.cs" />
    <Compile Include="Handlers\ErrorHandler\Tracer.cs" />
    <Compile Include="Interfaces\ICurrencyHandler.cs" />
    <Compile Include="Interfaces\IErrorHandler.cs" />
    <Compile Include="Interfaces\IExecutor.cs" />
    <Compile Include="Interfaces\IInterpreter.cs" />
    <Compile Include="Interfaces\INode.cs" />
    <Compile Include="Interfaces\IReader.cs" />
    <Compile Include="Interfaces\IParser.cs" />
    <Compile Include="Interfaces\ISemanticCheck.cs" />
    <Compile Include="Interfaces\ITerminalPrinter.cs" />
    <Compile Include="Interfaces\ITracer.cs" />
    <Compile Include="Interpreter.cs" />
    <Compile Include="Semantic\Instructions\Assignment.cs" />
    <Compile Include="Semantic\Interfaces\IAssignable.cs" />
    <Compile Include="Semantic\Entities\Block.cs" />
    <Compile Include="Semantic\Instructions\Call.cs" />
    <Compile Include="Semantic\Entities\Condition.cs" />
    <Compile Include="Semantic\Entities\Expression.cs" />
    <Compile Include="Semantic\Interfaces\IConditionOperand.cs" />
    <Compile Include="Semantic\Interfaces\IExecutable.cs" />
    <Compile Include="Semantic\Entities\Function.cs" />
    <Compile Include="Semantic\Interfaces\IExpressionOperand.cs" />
    <Compile Include="Semantic\Interfaces\IInstruction.cs" />
    <Compile Include="Semantic\Entities\Literal.cs" />
    <Compile Include="Semantic\Entities\ScopeInstance.cs" />
    <Compile Include="Semantic\Entities\ScopeProto.cs" />
    <Compile Include="Semantic\Entities\Variable.cs" />
    <Compile Include="Semantic\Instructions\IfStatement.cs" />
    <Compile Include="Semantic\Instructions\LoopJump.cs" />
    <Compile Include="Semantic\Instructions\Return.cs" />
    <Compile Include="Semantic\Instructions\WhileStatement.cs" />
    <Compile Include="Semantic\SemanticCheck.cs" />
    <Compile Include="StandardLibrary\StdLib.cs" />
    <Compile Include="Stream\Reader.cs" />
    <Compile Include="Utils\CommandLineOptions.cs" />
    <Compile Include="Common\Token.cs" />
    <Compile Include="Common\TokenTypeDicts.cs" />
    <Compile Include="Common\TokenTypeEnum.cs" />
    <Compile Include="Interfaces\ILexer.cs" />
    <Compile Include="Interfaces\ISource.cs" />
    <Compile Include="Lexical\Lexer.cs" />
    <Compile Include="Program.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Stream\Source.cs" />
    <Compile Include="Syntax\Parser.cs" />
    <Compile Include="Handlers\CurrencyHandler\CurrencyHandler.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="App.config" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>